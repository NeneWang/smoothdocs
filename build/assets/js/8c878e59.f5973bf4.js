"use strict";(self.webpackChunksmoothdocs=self.webpackChunksmoothdocs||[]).push([[471],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(n),h=a,m=p["".concat(u,".").concat(h)]||p[h]||d[h]||i;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3042:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:2,title:"Medium Algorithms - 2"},u=void 0,s={unversionedId:"cs/mid-2",id:"cs/mid-2",title:"Medium Algorithms - 2",description:"16 -  Invert Binary Tree",source:"@site/resources/cs/mid-2.md",sourceDirName:"cs",slug:"/cs/mid-2",permalink:"/resources/cs/mid-2",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Medium Algorithms - 2"},sidebar:"tutorialSidebar",previous:{title:"Medium Algorithms - 1",permalink:"/resources/cs/mid-1"},next:{title:"Medium Algorithms - 3",permalink:"/resources/cs/mid-3"}},c={},d=[{value:"16 -  Invert Binary Tree",id:"16----invert-binary-tree",level:2},{value:"17 -  Binary Tree Diameter",id:"17----binary-tree-diameter",level:2},{value:"17b -  Find Successor",id:"17b----find-successor",level:2},{value:"18 -  Height Balanced Binary Tree",id:"18----height-balanced-binary-tree",level:2},{value:"19 -  Max Subset Sum No Adjacent",id:"19----max-subset-sum-no-adjacent",level:2},{value:"20 -  Number of Ways to Make Change",id:"20----number-of-ways-to-make-change",level:2},{value:"21 -  Min Number of Coins for Change",id:"21----min-number-of-coins-for-change",level:2},{value:"22 -  Levenshtein Distance",id:"22----levenshtein-distance",level:2},{value:"23 -  Kadane&#39;s Algorithm",id:"23----kadanes-algorithm",level:2},{value:"24 -  Single Cycle Check",id:"24----single-cycle-check",level:2}],p={toc:d};function h(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"16----invert-binary-tree"},"16 -  Invert Binary Tree"),(0,i.kt)("p",null,"Write a function that takes in a Binary Tree and inverts it. In other words, the function should swap every left node in the tree for its corresponding right node."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9374).Z,width:"685",height:"495"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function invertBinaryTree(tree) {\n  // Write your code here.\n}\n\n// This is the class of the input binary tree.\nclass BinaryTree {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n}\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9300).Z,width:"1227",height:"811"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/pqWXSxn-4oM",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"\nfunction invertBinaryTree(tree) {\n    // Write your code here.\n    const queue = [tree];\n    while (queue.length) {\n        const current = queue.shift();\n        if (current === null) continue;\n        swapLeftAndRight(current);\n        queue.push(current.left);\n        queue.push(current.right);\n    }\n\n\n\n}\n\nfunction swapLeftAndRight(tree) {\n    const left = tree.left;\n    tree.left = tree.right;\n    tree.right = left;\n}\n}\n\n")))),(0,i.kt)("h2",{id:"17----binary-tree-diameter"},"17 -  Binary Tree Diameter"),(0,i.kt)("p",null,"Write a function that takes in a Binary Tree and returns its diameter. The diameter of a binary tree is defined as the length of its longest path, even if that path doesn't pass through the root of the tree."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6249).Z,width:"634",height:"400"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// This is an input class. Do not edit.\nclass BinaryTree {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n}\n\nfunction binaryTreeDiameter(tree) {\n  // Write your code here.\n  return -1;\n}\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"17b----find-successor"},"17b -  Find Successor"),(0,i.kt)("p",null,"Write a fucntion that takes in a Binary Tree ( Where nodes have an additional pointer to their parend node) as welll as a node contained in that tree and return the given node's successor."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(5596).Z,width:"849",height:"560"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// This is an input class. Do not edit.\nclass BinaryTree {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n    this.parent = null;\n  }\n}\n\nfunction findSuccessor(tree, node) {\n  // Write your code here.\n  return null;\n}\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"class BinaryTree {\n    constructor(value) {\n        this.value = value;\n        this.left = null;\n        this.right = null;\n        this.parent = null;\n    }\n}\n\nfunction findSuccessor(tree, node) {\n    const inOrderTraversalOrder = getInOrderTraversalOrder(tree);\n\n    for (let idx = 0; idx < inOrderTraversalOrder.length; idx++) {\n        const currentNode = inOrderTraversalOrder[idx];\n        if (currentNode !== node) continue;\n\n        if (idx === inOrderTraversalOrder.length - 1) return null;\n\n        return inOrderTraversalOrder[idx + 1];\n    }\n}\n\nfunction getInOrderTraversalOrder(node, order = []) {\n    if (node === null) return order;\n    getInOrderTraversalOrder(node.left, order);\n    order.push(node);\n    getInOrderTraversalOrder(node.right, order);\n\n    return order;\n}\n")))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Advanced Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nfunction findSuccessor(tree, node) {\n    if (node.right !== null) return getLeftMostChild(node.right);\n    return getRightMostParent(node);\n}\n\n\nfunction getLeftMostChild(node){\n    let currentNode = node;\n    while(currentNode.left !== null){\n        currentNode = currentNode.left;\n    }\n\n    return currentNode;\n}\n\nfunction getRightMostParent(node) {\n    let currentNode = node;\n    while (currentNode.parent !== null && currentNode.parent.right == currentNode) {\n        currentNode = currentNode.parent;\n    }\n    return currentNode.parent;\n}\n\n"))),(0,i.kt)("h2",{id:"18----height-balanced-binary-tree"},"18 -  Height Balanced Binary Tree"),(0,i.kt)("p",null,"You're given the root node of a Binary Tree. Write a function that returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if this Binary Tree is height balanced and ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," if it isn't"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6397).Z,width:"544",height:"486"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// This is an input class. Do not edit.\nclass BinaryTree {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n}\n\nfunction heightBalancedBinaryTree(tree) {\n  // Write your code here.\n  return false;\n}\n\n// Do not edit the lines below.\nexports.BinaryTree = BinaryTree;\nexports.heightBalancedBinaryTree = heightBalancedBinaryTree;\n\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/ofSsDWpqfZo",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"class BinaryTree {\n    constructor(value) {\n        this.value = value;\n        this.left = null;\n        this.right = null;\n    }\n}\n\nclass TreeInfo {\n    constructor(isBalanced, height) {\n        this.isBalanced = isBalanced;\n        this.height = height;\n    }\n}\n\nfunction heightBalancedBinaryTree(tree) {\n    const treeInfo = getTreeInfo(tree);\n    return treeInfo.isBalanced;\n}\n\nfunction getTreeInfo(node) {\n    if (node === null) return new TreeInfo(true, -1);\n    const leftSubtreeInfo = getTreeInfo(node.left);\n    const rightSubtreeInfo = getTreeInfo(node.right);\n\n    const isBalanced = leftSubtreeInfo.isBalanced && rightSubtreeInfo.isBalanced && Math.abs(leftSubtreeInfo.height - rightSubtreeInfo.height) <=1;\n    const height = Math.max(leftSubtreeInfo.height, rightSubtreeInfo.height) + 1;\n    return new TreeInfo(isBalanced, height);\n\n}\n// Do not edit the lines below.\nexports.BinaryTree = BinaryTree;\nexports.heightBalancedBinaryTree = heightBalancedBinaryTree;\n\n}\n\n")))),(0,i.kt)("h2",{id:"19----max-subset-sum-no-adjacent"},"19 -  Max Subset Sum No Adjacent"),(0,i.kt)("p",null,"Write a function that takes in an array of positive integers and returns the maximum sum of non-adjacent elements in the array."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(8428).Z,width:"644",height:"248"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"20----number-of-ways-to-make-change"},"20 -  Number of Ways to Make Change"),(0,i.kt)("p",null,"Description"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6673).Z,width:"786",height:"538"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"21----min-number-of-coins-for-change"},"21 -  Min Number of Coins for Change"),(0,i.kt)("p",null,"Description"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6673).Z,width:"786",height:"538"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"22----levenshtein-distance"},"22 -  Levenshtein Distance"),(0,i.kt)("p",null,"Description"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6673).Z,width:"786",height:"538"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"23----kadanes-algorithm"},"23 -  Kadane's Algorithm"),(0,i.kt)("p",null,"Description"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6673).Z,width:"786",height:"538"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))),(0,i.kt)("h2",{id:"24----single-cycle-check"},"24 -  Single Cycle Check"),(0,i.kt)("p",null,"Description"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6673).Z,width:"786",height:"538"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starter Code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"starter Code\n\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud83d\udc68\u200d\ud83d\udd2c Javascript Solution"),(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("img",{src:n(9434).Z,width:"1188",height:"784"})),(0,i.kt)("iframe",{width:"380",height:"420",src:"https://www.youtube.com/embed/9kDaGmTZhVI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Solution Code\n}\n\n")))))}h.isMDXComponent=!0},6673:function(e,t,n){t.Z=n.p+"assets/images/2022-05-06-15-44-28-c64c899f78f902b0291783bffd0c2ba2.png"},9434:function(e,t,n){t.Z=n.p+"assets/images/2022-06-12-02-17-29-8012fe120d2ce3e3ef0b8857006a64ac.png"},9374:function(e,t,n){t.Z=n.p+"assets/images/2022-06-12-11-26-16-d6e4cc5e51d4a6512d000c4e380ee651.png"},6249:function(e,t,n){t.Z=n.p+"assets/images/2022-06-12-11-57-43-66285597e733cb340e9cc6fbca247e10.png"},9300:function(e,t,n){t.Z=n.p+"assets/images/2022-06-12-12-00-37-5e00f62960dc54e37345e88c553bff14.png"},5596:function(e,t,n){t.Z=n.p+"assets/images/2022-06-13-22-14-45-e752020bdb0ef4e25aa96ea270f18490.png"},6397:function(e,t,n){t.Z=n.p+"assets/images/2022-06-23-01-36-11-696290011b7169c8d177c1d1819770c0.png"},8428:function(e,t,n){t.Z=n.p+"assets/images/2022-06-23-02-40-44-be0e979703eed3a8d100a2f8594208a9.png"}}]);